name: Multi-Platform Build

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  JAVA_VERSION: '23'

jobs:
  build-jar:
    name: Build JAR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build stripped jar
        run: |
          ./gradlew proguardJar
          mv build/libs/vd-tool-min.jar vd-tool.jar

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: vd-tool.jar
          path: vd-tool.jar

  build-native-linux:
    name: Build native binaries (Linux)
    needs: build-jar
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - arch: aarch64
            platform: linux/arm64
            os: macos-latest
          - arch: x86_64
            platform: linux/amd64
            os: ubuntu-latest
    env:
      FILE_NAME: vd-tool-linux-${{ matrix.arch }}

    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: vd-tool.jar

      - name: Set up QEMU
        if: matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64'

      - name: Build native image
        run: >
          docker run --rm
          --platform ${{ matrix.platform }}
          -v ${{ github.workspace }}:/w
          ghcr.io/graalvm/graalvm-community:${{ env.JAVA_VERSION }}
          native-image -Os -jar /w/vd-tool.jar /w/${{ env.FILE_NAME }}

      - name: Set file permissions
        run: |
          sudo chown $USER:$USER ${{ env.FILE_NAME }}

      - name: Compress with UPX
        uses: svenstaro/upx-action@v2
        with:
          file: ${{ env.FILE_NAME }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.FILE_NAME }}
          path: ${{ env.FILE_NAME }}

  build-native-macos:
    name: Build native binaries (macOS)
    needs: build-jar
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-14
            arch: arm64
          - os: macos-latest
            arch: x86_64
    env:
      FILE_NAME: vd-tool-macos-${{ matrix.arch }}

    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: vd-tool.jar

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build native image
        run: |
          native-image -Os -jar vd-tool.jar ${{ env.FILE_NAME }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.FILE_NAME }}
          path: ${{ env.FILE_NAME }}

  release:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    name: Create Release
    needs: [ build-native-linux, build-native-macos ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          make_latest: true
          draft: false
          files: release-assets/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
