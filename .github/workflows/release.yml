name: Multi-Platform Build

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
    branches:
      - main
  workflow_dispatch:

env:
  JAVA_VERSION: '23'

jobs:
  build-jar:
    name: Build JAR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build stripped jar
        run: ./gradlew proguardJar

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: vd-tool.jar
          path: build/libs/vd-tool.jar

  build-native:
    name: Build native binaries
    needs: build-jar
    strategy:
      matrix:
        include:
          - os: macos-14
            platform: macos
            arch: arm64
          - os: macos-latest
            platform: macos
            arch: x86_64
          - os: ubuntu-latest
            platform: linux
            arch: x86_64
          - os: ubuntu-latest
            platform: linux
            arch: aarch64
            use_qemu: true
    runs-on: ${{ matrix.os }}
    env:
      FILE_NAME: vd-tool-${{ matrix.platform }}-${{ matrix.arch }}

    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: vd-tool.jar

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build native image (non-QEMU)
        if: ${{ !matrix.use_qemu }}
        run: |
          native-image -Os -jar vd-tool.jar ${{ env.FILE_NAME }}

      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
        with:
          ## limits ssh access and adds the ssh public key for the user which triggered the workflow
          limit-access-to-actor: true
          ## limits ssh access and adds the ssh public keys of the listed GitHub users
          limit-access-to-users: IlyaGulya


      - name: Build native image (QEMU)
        if: ${{ matrix.use_qemu }}
        run: |
          docker run --privileged --rm tonistiigi/binfmt --install arm64
          
          docker run \
            --volume "${PWD}:/workspace" \
            ghcr.io/graalvm/jdk-community:${{ env.JAVA_VERSION }}
            native-image -Os -jar \
              /workspace/vd-tool.jar \
              /workspace/${{ env.FILE_NAME }}

        uses: uraimo/run-on-arch-action@v2
        with:
          arch: none
          distro: none
          base_image: ${{ env.GRAALVM_DOCKER_IMAGE_LINUX_ARM64 }}
          githubToken: ${{ github.token }}
          dockerRunArgs: |
            --volume "${PWD}:/workspace"
          shell: /bin/bash
          run: |
            cd /workspace
            native-image -Os -jar vd-tool.jar ${{ env.FILE_NAME }}

      - name: Compress with UPX (Linux only)
        if: matrix.platform == 'linux'
        uses: svenstaro/upx-action@v2
        with:
          file: ${{ env.FILE_NAME }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.FILE_NAME }}
          path: ${{ env.FILE_NAME }}

  release:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    name: Create Release
    needs: build-native
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          make_latest: true
          draft: false
          files: release-assets/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
